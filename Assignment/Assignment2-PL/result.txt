Expression: 1 + 2 * 3
Tokens: ['1', '+', '2', '*', '3']
Parse Tree: ('+', 1, ('*', 2, 3))
Result: 7

Expression: 2 ^ 3 ^ 2
Tokens: ['2', '^', '3', '^', '2']
Parse Tree: ('^', 2, ('^', 3, 2))
Result: 512

Expression: -(3 + 2) * 5
Tokens: ['-', '(', '3', '+', '2', ')', '*', '5']
Parse Tree: ('*', ('neg', ('+', 3, 2)), 5)
Result: -25

Expression: 1 + * 2
Tokens: ['1', '+', '*', '2']
Error

Expression: (2 + 3
Tokens: ['(', '2', '+', '3']
Error

Expression: -5 + 3
Tokens: ['-', '5', '+', '3']
Parse Tree: ('+', ('neg', 5), 3)
Result: -2

Expression: 5 * -2
Tokens: ['5', '*', '-', '2']
Parse Tree: ('*', 5, ('neg', 2))
Result: -10

Expression: 3 * + 3
Tokens: ['3', '*', '+', '3']
Error

Expression: 1 - - 3
Tokens: ['1', '-', '-', '3']
Parse Tree: ('-', 1, ('neg', 3))
Result: 4

Expression: 5 + 2 * 10
Tokens: ['5', '+', '2', '*', '10']
Parse Tree: ('+', 5, ('*', 2, 10))
Result: 25

Expression: 20 / 5 * 2
Tokens: ['20', '/', '5', '*', '2']
Parse Tree: ('*', ('/', 20, 5), 2)
Result: 8.0

Expression: (10 + 2) * (10 / (8 - 3))
Tokens: ['(', '10', '+', '2', ')', '*', '(', '10', '/', '(', '8', '-', '3', ')', ')']
Parse Tree: ('*', ('+', 10, 2), ('/', 10, ('-', 8, 3)))
Result: 24.0

Expression: -5 * -10
Tokens: ['-', '5', '*', '-', '10']
Parse Tree: ('*', ('neg', 5), ('neg', 10))
Result: 50

Expression: 100 - (5 * 2) ^ 2 / 10
Tokens: ['100', '-', '(', '5', '*', '2', ')', '^', '2', '/', '10']
Parse Tree: ('-', 100, ('/', ('^', ('*', 5, 2), 2), 10))
Result: 90.0

Expression: (5 + 10 * (2 - 1)
Tokens: ['(', '5', '+', '10', '*', '(', '2', '-', '1', ')']
Error

Expression: (4 + 3a) * 2
Tokens: ['(', '4', '+', '3', 'a', ')', '*', '2']
Error

Expression: a + b + 2
Tokens: ['a', '+', 'b', '+', '2']
Error

Expression: 5 / 0
Tokens: ['5', '/', '0']
Parse Tree: ('/', 5, 0)
Error

